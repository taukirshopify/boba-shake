{{ 'collection.css' | asset_url | stylesheet_tag }}
{{ 'component-product-card.css' | asset_url | stylesheet_tag }}
{{ 'component-article-card.css' | asset_url | stylesheet_tag }}
<script src="{{ 'collection.js' | asset_url }}" defer="defer"></script>
{% liquid
  assign container = section.settings.container
  if container == 'w-full'
    assign container = 'container-full'
  endif
%}
{% paginate search.results by section.settings.results_per_page %}
  <section
    class="facest-filters-section m-search"
		data-section-type="page-search"
		data-enable-filters="{{ section.settings.show_filter }}"
  	data-enable-sorting="{{ section.settings.show_sorting }}"
    data-section-id="{{ section.id }}"
    data-view="{{ template.name }}"
  >
		{% render 'customer-challenge-style' %}
		<div class="{{ container }}">
      <div class="m-page-header m:flex m:flex-col m:items-center">
        {% if search.performed %}
          <h1 class="m-page-header__title">{{ 'general.search.results_with_count' | t: terms: search.terms, count: search.results_count }}</h1>
        {% else %}
          <h1 class="m-page-header__title">{{ 'general.search.title' | t }}</h1>
        {% endif %}
        <form
          action="/search"
          method="GET"
          novalidate
          class="m-search--form"
        >
          <input type="hidden" name="options[unavailable_products]" value="last">
          <input type="hidden" name="options[prefix]" value="last">
          <input type="hidden" name="options[fields]" value="title,vendor,product_type,variants.title">
          <input
            type="text"
            name="q"
            required
            autocomplete="off"
            placeholder="{{ 'general.search.placeholder_short' | t }}"
            aria-label="{{ 'general.search.placeholder' | t }}"
            class="form-field form-field--input m-search--form-input"
          >
          <button type="submit" class="m-search--form-button" aria-label="Submit">
            <svg class="m-svg-icon--medium-small" fill="currentColor" stroke="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
              <path d="M508.5 468.9L387.1 347.5c-2.3-2.3-5.3-3.5-8.5-3.5h-13.2c31.5-36.5 50.6-84 50.6-136C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c52 0 99.5-19.1 136-50.6v13.2c0 3.2 1.3 6.2 3.5 8.5l121.4 121.4c4.7 4.7 12.3 4.7 17 0l22.6-22.6c4.7-4.7 4.7-12.3 0-17zM208 368c-88.4 0-160-71.6-160-160S119.6 48 208 48s160 71.6 160 160-71.6 160-160 160z"/>
            </svg>
          </button>
        </form>
      </div>
		</div>
    {% if search.performed %}
      <div class="{{ container }}">
        <div class="m-collection--wrapper m-sidebar--leftColumn">
          <div class="m-sidebar{% unless section.settings.show_filter %} m:hidden{% endunless %}">
            <div class="m-sidebar--content">
              {%- if section.settings.sidebar_title != blank -%}
                <h3 class="m-sidebar--title">{{ section.settings.sidebar_title }}</h3>
              {%- endif -%}
              <div class="m-sidebar--close xl:m:hidden">
                <svg class="m-svg-icon--large" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
              </div>
              <div class="m-filter--wrapper">
                {% render 'storefront-filters', section: section, results: search %}
              </div>
            </div>
          </div>
          <div id="CollectionProductGrid" class="m:flex-1">
            {%- render 'collection-page-toolbar', section: section, results: search -%}
            {%- render 'collection-filters-facets', results: search -%}
            {% if search.results_count == 0 %}
              <div class="m-search--empty m:text-xl">
                {{ 'general.search.no_results_html' | t: terms: search.terms }}
              </div>
              {% render 'customer-challenge-style' %}
            {% else %}
            <div class="m-search-result m:flex m:flex-wrap{% if section.settings.show_filter or section.settings.show_sorting %} m-search-show-filter{% endif %}">
              {% for item in search.results limit: section.settings.results_per_page %}
                {% if item.object_type == 'product' %}
                  <div class="m-search-item m:w-1/2 sm:m:w-4/12 lg:m:w-3/12">
                    {% liquid
                      case settings.pcard_layout
                        when '1'
                          render 'product-card-1', product: item, section: section
                        when '2'
                          render 'product-card-2', product: item, section: section
                        when '3'
                          render 'product-card-3', product: item, section: section
                        when '4'
                          render 'product-card-4', product: item, section: section
                        when '5'
                          render 'product-card-5', product: item, section: section
                      endcase
                    %}
                  </div>
                {% endif %}
                {% if item.object_type == 'article' %}
                  <div class="m-search-item m:w-1/2 sm:m:w-4/12 lg:m:w-3/12">
                    {% render 'article-card', article: item %}
                  </div>
                {% endif %}
                {% if item.object_type == 'page' %}
                  <div class="m-search-item m:w-1/2 sm:m:w-4/12 lg:m:w-3/12">
                    <a href="{{ item.url }}" class="m-search-item-page m:flex m:flex-col m:justify-center m:h-full">                        
                      <span class="m-search-item-page--badge">Page</span>
                      <h3 class="m-search-item-page--title h5">{{ item.title | escape }}</h3>
                    </a>
                  </div>
                {% endif %}
              {% endfor %}
            </div>
            {% endif %}
            {% if paginate.pages > 1 %}
              <div class="m-search-pagination">
                {% render 'pagination', paginate: paginate %}
              </div>
            {% endif %}
          </div>
        </div>
      </div>
    {% endif %}
  </section>
	{% if section.settings.show_sorting %}
		{%- render 'sort-by-mobile', results: search -%}
	{% endif %}
{% endpaginate %}
<script>
  window.addEventListener('load', () => {
    if (typeof Collection !== 'undefined') {
      MinimogTheme.Collection = new Collection();
      MinimogTheme.Collection.init();
    }
  });
  if (Shopify.designMode) {
    document.addEventListener('shopify:section:load', function(event) {
      MinimogTheme.Collection.init();
    });
  }
</script>
{% schema %}
{
  "name": "Search",
  "settings": [
    {
      "type": "header",
      "content": "General"
    },
    {
      "type": "select",
      "id": "container",
      "label": "Container type",
      "default": "container-fluid",
      "options": [
        {
          "value": "container-fluid",
          "label": "Default"
        },
        {
          "value": "container-full",
          "label": "Full width"
        },
        {
          "value": "container",
          "label": "Use container box"
        }
      ]
    },
    {
      "type": "header",
      "content": "Pagination"
    },
    {
      "type": "range",
      "id": "results_per_page",
      "label": "Results per page",
      "default": 12,
      "min": 8,
      "max": 48,
      "step": 1
    },
    {
      "type": "header",
      "content": "SORTING AND FILTERING"
    },
    {
      "type": "checkbox",
      "id": "show_sorting",
      "label": "Enable sorting",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_filter",
      "label": "Enable filtering",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_product_count",
      "label": "Show results count on filter item",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "change_product_variant_on_fitlering",
      "label": "Change product card variant on filtering",
      "default": true,
      "info": "Change product card options, price and image based on the variant after filtering."
    },
    {
      "type": "text",
      "id": "sidebar_title",
      "label": "Filters title",
      "default": "Filters",
      "info": "Leave blank to hide"
    },
    {
      "type": "text",
      "id": "collapsed_groups",
      "label": "Collapsed filter groups",
      "default": "Brand, Vendor, Size",
      "info": "Filters groups that collapsed by default. Separate by comma."
    },
    {
      "type": "text",
      "id": "color_swatches",
      "label": "Color swatches group",
      "default": "color,colour,couleur,farbe",
      "info": "Enter color option name, separate by comma."
    },
    {
      "type": "checkbox",
      "id": "limit_height_widget",
      "label": "Limit filter widget's height",
      "default": false
    },
    {
      "type": "range",
      "id": "limit_height",
      "label": "Max height",
      "default": 300,
      "step": 10,
      "min": 200,
      "max": 600,
      "unit": "px"
    }
  ]
}
{% endschema %}
